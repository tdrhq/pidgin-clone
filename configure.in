dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/aim.c)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE([gaim], [0.10.0])

dnl Checks for programs.
AM_PROG_LIBTOOL
AC_PROG_CC
AC_PROG_INSTALL

ALL_LINGUAS="de fr es zh_CN ko"
AM_GNU_GETTEXT

AC_CYGWIN


dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h sys/time.h unistd.h locale.h)
AC_CHECK_HEADERS(pthread.h,,AC_MSG_ERROR([*** POSIX thread support not found ***]))

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_STRUCT_TM

dnl Checks for library functions.
AC_TYPE_SIGNAL
AC_FUNC_STRFTIME
AC_CHECK_FUNCS(socket strdup strstr atexit)

dnl This is a bad, bad hack.  I am a bad, bad man.
CFLAGS="$CFLAGS -I/usr/local/include -I/opt/include -I../"

AC_ARG_ENABLE(distrib,,,enable_distrib=no)
AM_CONDITIONAL(DISTRIB, test "x$enable_distrib" = "xyes")
AC_ARG_ENABLE(debug,   [  --enable-debug          compile with debugging support],,enable_debug=no)
AC_ARG_ENABLE(gnome,   [  --enable-gnome          compile as a GNOME applet],,enable_gnome=$enable_distrib)
AM_CONDITIONAL(GNOMEAPPLET, test "x$enable_gnome" = "xyes")
AC_ARG_ENABLE(esd,     [  --disable-esd           Turn off ESD (default=auto)],enable_esd=no,enable_esd=yes)
AC_ARG_ENABLE(nas,     [  --enable-nas            Enable NAS (Network Audio System) support],,enable_nas=no)
AC_ARG_ENABLE(plugins, [  --disable-plugins       compile with out plugin support],enable_plugins=no,enable_plugins=yes)
AC_ARG_ENABLE(perl,    [  --disable-perl          compile without perl scripting],enable_perl=no,enable_perl=yes)
AM_CONDITIONAL(PLUGINS, test x$enable_plugins = xyes)
AC_ARG_ENABLE(,,,)

if test "$enable_debug" = yes ; then
dnl	someone please tell me what -d does
dnl	CFLAGS="$CFLAGS -Wall -d -g"
	CFLAGS="$CFLAGS -Wall -g"
	AC_DEFINE(DEBUG)
fi

AM_PATH_GLIB(1.2.0)
AM_PATH_GTK(1.2.0,,,gthread)
LIBS="$LIBS $GTK_LIBS"
CFLAGS="$CFLAGS -I../libfaim -I../libfaim/faim"
LDADD="$LDADD -L../libfaim -lfaim -pthread"

if test "x$enable_gnome" = "xyes" ; then
	GNOME_INIT(applets)
	GNOME_X_CHECKS
        CFLAGS="$CFLAGS $GNOME_INCLUDEDIR"
	AC_DEFINE(USE_APPLET)
	LIBS="$LIBS $GNOME_LIBDIR $GNOME_APPLETS_LIBS"
fi

CFLAGS="$CFLAGS $GTK_CFLAGS"

if test "$enable_plugins" = yes ; then
	AC_DEFINE(GAIM_PLUGINS)
fi

dnl This was taken straight from X-Chat.
dnl X-Chat is the greatest application ever, not only
dnl because it's a rocking IRC client but also because
dnl it's very easy to learn from.
if test "$enable_perl" = yes ; then
	AC_PATH_PROG(sedpath, sed)
	AC_PATH_PROG(perlpath, perl)
	AC_MSG_CHECKING(for Perl compile flags)
	PERL_CFLAGS=`$perlpath -MExtUtils::Embed -e ccopts 2>/dev/null`
	if test "_$PERL_CFLAGS" = _ ; then
		AC_MSG_RESULT([not found, building without perl.])
		enable_perl = no
	else
		PERL_LDFLAGS=`$perlpath -MExtUtils::Embed -e ldopts 2>/dev/null |$sedpath 's/-lgdbm //'`
		PERL_LDFLAGS=`echo $PERL_LDFLAGS |$sedpath 's/-ldb //'`
		PERL_LDFLAGS=`echo $PERL_LDFLAGS |$sedpath 's/-lndbm //'`
		if test "$system" = "Linux"; then
			PERL_LDFLAGS=`echo $PERL_LDFLAGS |$sedpath 's/-lnsl //'`
			PERL_LDFLAGS=`echo $PERL_LDFLAGS |$sedpath 's/-lposix //'`
		fi
		PERL_LDFLAGS=`echo $PERL_LDFLAGS |$sedpath 's/-lc //'`
		AC_MSG_RESULT(ok)
		CFLAGS="$CFLAGS $PERL_CFLAGS"
		LIBS="$LIBS $PERL_LDFLAGS"
		AC_DEFINE(USE_PERL)
		AC_CHECK_FUNCS(Perl_eval_pv)
	fi
fi

if test "$enable_nas" = yes ; then
	AC_DEFINE(NAS_SOUND)
        LIBS="$LIBS -laudio"
fi

if test "$enable_esd" = yes ; then
	AM_PATH_GESD
        if test "$no_esd" != yes ; then
        	CFLAGS="$CFLAGS $ESD_CFLAGS"
		AC_DEFINE(ESD_SOUND)
                LDADD="$LDADD $ESD_LIBS"
        fi
fi

if test "$ac_cv_cygwin" = yes ; then
	LDADD="$LDADD -static"
	CFLAGS="$CFLAGS -Wall -g"
	AC_DEFINE(DEBUG)
fi                           

AC_SUBST(CFLAGS)
AC_SUBST(LDADD)
AC_SUBST(LIBS)
AC_SUBST(LIBFAIM_DO)

AC_OUTPUT([Makefile
	   src/Makefile
	   intl/Makefile
           sounds/Makefile
	   plugins/Makefile
           pixmaps/Makefile
           libfaim/Makefile
	   po/Makefile.in
           doc/Makefile
           m4/Makefile
	   gaim.spec
          ])
