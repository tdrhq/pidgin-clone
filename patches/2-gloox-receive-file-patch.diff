Common subdirectories: src-new/.deps and src-new2/.deps
Common subdirectories: src-new/examples and src-new2/examples
Common subdirectories: src-new/.libs and src-new2/.libs
Binary files src-new/siprofileft.o and src-new2/siprofileft.o differ
diff -u src-new/socks5bytestreammanager.cpp src-new2/socks5bytestreammanager.cpp
--- src-new/socks5bytestreammanager.cpp	2008-11-06 11:26:52.000000000 +0100
+++ src-new2/socks5bytestreammanager.cpp	2008-11-08 19:25:40.000000000 +0100
@@ -125,7 +125,7 @@
     if( (*it).second.incoming )
     {
       iq->addAttribute( "to", (*it).second.from.full() );
-	  iq->addAttribute( "from", from.full() );
+	  iq->addAttribute( "from", (*it).second.to.full()  );
       iq->addAttribute( "id", (*it).second.id );
 
       if( success )
@@ -201,6 +201,7 @@
         }
         asi.id = stanza->id();
         asi.from = stanza->from();
+		asi.to = stanza->to();
         asi.incoming = true;
         m_asyncTrackMap[sid] = asi;
         m_socks5BytestreamHandler->handleIncomingSOCKS5BytestreamRequest( sid, stanza->from() );
@@ -257,7 +258,7 @@
 
     SOCKS5Bytestream* s5b = new SOCKS5Bytestream( this, m_parent->connectionImpl()->newInstance(),
                                                   m_parent->logInstance(),
-                                                  (*it).second.from, m_parent->jid(),JID(), sid );
+                                                  (*it).second.to, (*it).second.to,(*it).second.from, sid );
     s5b->setStreamHosts( (*it).second.sHosts );
     m_s5bMap[sid] = s5b;
     m_socks5BytestreamHandler->handleIncomingSOCKS5Bytestream( s5b );
diff -u src-new/socks5bytestreammanager.cpp~ src-new2/socks5bytestreammanager.cpp~
--- src-new/socks5bytestreammanager.cpp~	2008-11-06 11:26:32.000000000 +0100
+++ src-new2/socks5bytestreammanager.cpp~	2008-11-08 19:21:18.000000000 +0100
@@ -201,6 +201,7 @@
         }
         asi.id = stanza->id();
         asi.from = stanza->from();
+		asi.to = stanza->to();
         asi.incoming = true;
         m_asyncTrackMap[sid] = asi;
         m_socks5BytestreamHandler->handleIncomingSOCKS5BytestreamRequest( sid, stanza->from() );
@@ -257,7 +258,7 @@
 
     SOCKS5Bytestream* s5b = new SOCKS5Bytestream( this, m_parent->connectionImpl()->newInstance(),
                                                   m_parent->logInstance(),
-                                                  (*it).second.from, m_parent->jid(),JID(), sid );
+                                                  (*it).second.to, (*it).second.to,(*it).second.from, sid );
     s5b->setStreamHosts( (*it).second.sHosts );
     m_s5bMap[sid] = s5b;
     m_socks5BytestreamHandler->handleIncomingSOCKS5Bytestream( s5b );
@@ -354,7 +355,7 @@
               {
                 SHA sha;
                 sha.feed( (*it).second );
-                sha.feed( stanza->to() );
+                sha.feed( stanza->to().full() );
                 sha.feed( stanza->from().full() );
                 s5b = new SOCKS5Bytestream( this, m_server->getConnection( sha.hex() ),
                                             m_parent->logInstance(),
diff -u src-new/socks5bytestreammanager.h src-new2/socks5bytestreammanager.h
--- src-new/socks5bytestreammanager.h	2008-11-06 07:31:55.000000000 +0100
+++ src-new2/socks5bytestreammanager.h	2008-11-08 19:09:22.000000000 +0100
@@ -179,6 +179,7 @@
       struct AsyncS5BItem
       {
         JID from;
+		JID to;
         std::string id;
         StreamHostList sHosts;
         bool incoming;
diff -u src-new/socks5bytestreammanager.h~ src-new2/socks5bytestreammanager.h~
--- src-new/socks5bytestreammanager.h~	2008-11-05 20:44:48.000000000 +0100
+++ src-new2/socks5bytestreammanager.h~	2008-11-06 07:31:55.000000000 +0100
@@ -164,7 +164,7 @@
       bool haveStream( const JID& from );
       const StreamHost* findProxy( const JID& from, const std::string& hostjid, const std::string& sid );
 
-      void acknowledgeStreamHost( bool success, const JID& jid, const std::string& sid );
+      void acknowledgeStreamHost( bool success, const JID& jid,const JID& from, const std::string& sid );
 
       enum IBBActionType
       {
Binary files src-new/socks5bytestreammanager.o and src-new2/socks5bytestreammanager.o differ
Binary files src-new/socks5bytestream.o and src-new2/socks5bytestream.o differ
