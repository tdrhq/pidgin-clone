
Fri Jun  9 08:13:36 UTC 2000 EWarmenhoven
	- OK, so TOC can do ICQ too, but I don't care. Adam's still cool.
	- Chat is working almost perfectly now. I haven't figured out why it
	  won't join a room that no one's already in yet, but I think I know
	  what the problem is.
	- Adam says file transfer stuff will be here RSN, so be patient.

Sat Jun  3 07:22:50 UTC 2000 EWarmenhoven
	- Adam is by far the coolest person I know. He figured out how to get
	  libfaim not only to use ICQ, but how to make it so that there aren't
	  any client changes that are required - just use your UIN instead of
	  your SN.

Fri Jun  2 19:39:13 UTC 2000 EWarmenhoven
	- Buddy lists no longer get sent individually, but all together (as
	  many as fit in the buffer at one time). This should reduce a lot
	  of the "You're sending messages too fast" errors at signon.
	- Chat is improved a bit, mostly because I think I'm starting to get
	  some clue as to what's going on.

Fri Jun  2 08:53:53 UTC 2000 EWarmenhoven
	- Well, I got chat working again.
	- Added struct chat_connection to keep track of file descriptors and
	  input watchers.
	- Added oscar_chats to keep track of chat_connection's.
	- It still doesn't work well, nor all the time. But at least it works.

Thu Jun  1 09:36:04 UTC 2000 EWarmenhoven
	- The buddy list and permit/deny list get set before you finish signing
	  on now, so you shouldn't flash on the buddy lists of people you're
	  denying. This should also help some (not all) signin problems.
	- Added more debug_print statements to oscar.c and server.c to try to
	  figure out why chat's not working.

Wed May 31 19:15:38 UTC 2000 EWarmenhoven
	- Signon works better; oscar_callback takes an aim_conn_t instead of an
	  aim_session_t now to try and prevent reported connection errors.
	- Setting the latency before creating the buddy list seems to remove
	  some signon problems, especially if you have a larger buddy list.

Wed May 31 02:50:36 UTC 2000 EWarmenhoven
	- Good fun things here. Sometimes I think Adam does things just to make
	  it difficult for me, I swear (j/k :) ).
	- I moved all the .h files into the faim/ directory because I'm tired
	  of changing faim/aim.h to just aim.h every time Adam makes an update.
	- libfaim can now send messages much longer than WinAIM or TOC can. But,
	  the length checking code is still in conversation.c, and I haven't
	  changed it yet, mostly because I'm lazy.

Wed May 31 00:40:42 UTC 2000 EWarmenhoven
	- Adam added a file to libfaim, aim_meta.c, that has one main function:
	  to return the libfaim version and when it was build (date/time). So
	  I added it to gaim's copy.
	- aim_meta.c included a file, aim_buildcode.h, which was created by a
	  shell script, and defined two values at build time. Instead of have
	  the Makefile run that script, I decided it would be easier to have
	  the Makefile define those values itself. This marks now two minor
	  changes to libfaim: changing some printf's to faimdprintf's, and not
	  including the shell script in favor of the Makefile way of doing it.
	- Just for grins (mostly to see if the code I added to Makefile.am did
	  what I wanted it to), I added a line to oscar.c to print the gaim and
	  libfaim versions to the debug window when you sign on. Maybe it'll be
	  useful in debugging at some point?

Tue May 30 23:40:11 UTC 2000 EWarmenhoven
	- So today, somone IMs me and says that he thinks that allowing only the
	  people on your buddy list to see you is a good thing, and that I
	  should implement it. Well, I did, but it doesn't work right most of
	  the time, as far as I can tell. At least it works occasionally. I
	  think I did everything right though. Maybe my timing is off?
	- Updates to libfaim, so I updated gaim's copy. There should really be a
	  better system.

Tue May 30 04:04:40 UTC 2000 EWarmenhoven
	- Well, after trying to screw around with the permit/deny stuff a bit,
	  I finally decided that having a permit list was for people who didn't
	  want AIM in the first place. Therefore, I only need to implement the
	  deny list. This made things work much better. I'm declaring the deny
	  list as working.
	- Chat isn't working, and hasn't for a while. I don't know why; I've
	  been playing with it for a few days now without much luck. I finally
	  decided it was time to move it to the UNSUPPORTED section in the
	  README.gaim file. I actually got it to work once; I don't know how.
	- Oscar support in gaim (since I started working on it) is now 10 days
	  old, and already I've had more than 5 people (not counting Rob) ask
	  me about it; one person even filed bugs against it. I'm not sure if
	  that's a good thing or not.

Mon May 29 20:24:24 UTC 2000 EWarmenhoven
	- Updated the libfaim code to the latest that's in libfaim's CVS. The
	  new code has one nice feature and one feature that may or may not
	  cause problems. The nice feature is aim_tx_enqueue__immediate, which
	  means that the change to aim_txenqueue I made no longer applies, I
	  just have to set gaim_sess->tx_enqueue to the __immediate function.
	  The one that may cause problems is libfaim has the beginnings of
	  threads. The way the code worked in libfaim was if you were using
	  linux, FAIM_USEPTHREADS was defined, otherwise, you couldn't use
	  libfaim. Since gaim requires pthreads at ./configure-time, we can
	  let anyone use it. So I changed that in faimconfig.h.
	- The changes clued me in to a few bugs in oscar.c that were causing
	  signon problems. Those should be fixed now.

Sun May 28 21:33:43 UTC 2000 EWarmenhoven
	- Figured out how aim_set_latency works, and why I thought it wasn't
	  working before, and so now you can receive messages a lot faster, I
	  hope.
	- Chat still isn't working, and I don't know why.
	- It no longer has me as one of your buddies, and no longer sets your
	  profile when you don't have one to 'Hello'.

Fri May 26 22:56:00 UTC 2000 EWarmenhoven
	- Adam explained to me everything I was doing wrong, ridiculed me a bit,
	  and eventually told me how to fix the 100% bug. Gaim/Faim is now
	  completely usable (chat is still a little funny). The only thing left
	  to do is add better error handling.
	- Changed aim_txqueue.c in libfaim to flush the queue after something
	  was enqueue'd, per Adam's suggestion. This is the only real change I
	  have made to libfaim in order to get it to work with gaim.
	- Commented out the permit/deny list stuff (again).

Thu May 25 07:10:34 UTC 2000 EWarmenhoven
	- Changed around aim.c a bit so that the registering of sounds and
	  plugins and such gets taken care of after we actually finish signing
	  on. this should fix a lot of things, but still not the 100% bug (as I
	  call it now).

Wed May 24 19:10:19 UTC 2000 EWarmenhoven
	- Got rid of aim_select. Good. But it still uses 100% of the CPU. Bad.
	  The reason is because oscar_callback gets called whenever there's
	  data waiting on the file descriptor, and it always thinks there's
	  data waiting, even when we've already dealt with the data.

Wed May 24 05:20:31 UTC 2000 EWarmenhoven
	- Inviting someone is possible now (I hope - I haven't been able to get
	  into a chat room using libfaim (any client) for a couple days now).
	- I found out from Adam that whispering (which is kind of a stupid idea
	  anyway) isn't in Oscar, and hasn't been for quite some time, so I
	  put a nice little error message when you try to whisper.

Tue May 23 18:07:00 UTC 2000 EWarmenhoven
	- I fixed the code to tell the server who's on your permit/deny list.
	  I still don't think it works right in all cases, but it does in most.

Tue May 23 03:32:26 UTC 2000 EWarmenhoven
	- I commented out the code to tell the server who's on your permit or
	  deny lists. I coded that part seriously wrong.
	- un-#ifndef'd rvous.c, so theoretically, once libfaim supports file
	  transfer (et al.) it should be relatively easy to add the code for
	  it.
	- Placed FIXME's throughout the code to try to signal problems
	- Other touch-ups (not worth mentioning)

Mon May 22 19:02:19 UTC 2000 EWarmenhoven
	- Able to be invited to join a chat room

Mon May 22 01:14:36 UTC 2000 EWarmenhoven
	- You can now get users' away messages

Sun May 21 11:42:22 UTC 2000 EWarmenhoven
	- There were small changes to the libfaim code, which I updated
	- Went ahead and implemented chat (since I said I wouldn't touch it
	  until libfaim got updated again)

Sat May 20 22:42:24 UTC 2000 EWarmenhoven
	- Getting a user's info now displays the familiar dialog window
	- You can now add people to your permit/deny list (I think - but I
	  also think I did it wrong)
	- It's been a busy day, I think I'm done until libfaim gets updated
	  again (which means no chat for a while, sorry)

Sat May 20 09:56:16 UTC 2000 EWarmenhoven
	- That 2 second delay in updates is gone, and I think it's actually
	  faster than the TOC code now.
	- I figured out why it was segfaulting. I'm stupid sometimes.
	- I figured out why the idle times were appearing bizarrely. Once
	  again, I'm stupid sometimes.
	- You can now be idle
	- You can now get a user's info (sort of - use the debug window) (still
	  no away messages though....)
	- You can now be away
	- You can now set your info (but not your dir info - yet)
	- I think it's almost at a point where it's ready for use.

Sat May 20 06:29:31 UTC 2000 EWarmenhoven
	- You can add and remove buddies now. It also tries to retrieve the
	  buddy list using the .gaimbdcache list, and saves it the same way
	  (remember the Oscar server doesn't save the list for us).
	- When someone goes idle (e.g. 10 minutes idle), it appears as 266334.5
	  hours idle. I'm not sure if that's my problem or libfaim's.
	- Sometimes it segfaults when you try to sign in, sometimes it doesn't.
	  I can't figure out why.
	- It still has the 2 second delay between display updates. I think I'm
	  going insane; it doesn't bug as much as it used to.

Sat May 20 00:16:25 UTC 2000 EWarmenhoven
	- First log entry! Yay!
	- Updated the libfaim code to the latest in CVS
	- Rewrote much of oscar.c (if not all).
	- Current supported features:
		Signing On
		Receiving IMs
		Sending IMs
	- There is a 2 second delay between GTK updates. Please, someone
	  fix this before I go insane.
