Perl Interpreter Working in HEAD
It looks like the dynamic linking of the XSUB library (<code>Gaim.so</code>) is no more.  After talking with Sean and spending a few hours massaging the code to build statically, the embedded Perl interpreter is functioning on the current CVS tree.  Now, instead of loading the Perl loader plugin then loading the perl module that has all of the XSUBs compiled into it, XSUBs are compiled in with the Perl loader plugin.  This bloats the loader plugin a little bit; even more so with the addition of all the 2.0 API calls included.  At least we have a working interpreter albeit a finicky one.  For right now, the Perl loader plugin dies at startup if there are any unresolved symbols (i.e. one of the API calls in the header files that has a corresponding XSUB does not have a corresponding implementation).  Therefore, I need to be sure there is an implementation of each API call used by the XSUBs.  Maybe there is a better way to link it so that this is not a problem, but I am not sure yet.    
<br><br>
The next challenge is to learn how the tools used to build Gaim work so that I can implement the changes that I created.  Once completed it should be possible to run Perl scripts under Gaim with expanded functionality as compared with its current capacity in the release version of Gaim.  It is my hope to have almost all of the API available to Perl script writers, but there are some issues with some parts of the API currently.  After doing some testing I have found that not all of the API calls work correctly from Perl.  Right now I am having fun with <code>gdb</code> trying to get to the bottom of why <code>Gaim::Account::connect()</code> works sometimes, crashes other times and does almost nothing part of the time.  Even though there are still many issues, it is promising to know that some version of the Perl Interpreter is working with the current version of Gaim.  Okay, back to work.
