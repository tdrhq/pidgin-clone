One Phase Done
Today I finished wrapping all the Gaim API calls with XSUBs.  Most of the API is now available in Perl, but it still not tested.  From the testing I have done so far it is hit and miss.  Some calls crash Perl such as trying to use <code>Gaim::Account::connect</code> and some seem to have no effect.  Most of the calls work, but its seems to not be so straight forward for others.  

If anything, this project has been an adventure in debugging.  Prior to working on the embedded perl interpreter I had only done debugging for small class projects and was able to correct the problem pretty easily.  In many of the instances I face, I find NULL pointers being dereferenced from data structures that otherwise look fine and seperate parts of the application not doing what I would expect.  It is a good learning experience at the least.

The two tasks that are going to be the most challenging are going to be getting the XSUBs that currently do not function properly for whatever reason (a few crash Gaim, some are not completely implemented) to work and to overcome the embedded interpreter not working in HEAD.  As part of the first task I am developing test codes in perl to be run as plugin scripts to test various features.  For many API calls, the best that can be done is running the script and verifying by hand (or eye because you see a new window pop up, etc. :-) the script performed the needed tasks.  One other side issue is that implementing some of the API function calls will require a bit more work such as anything that takes a function pointer as an argument.  I have a few ideas about how to tackle these problems.  There is a lot of ground to cover and time is flying by, but I hope to cover at least enough of it to have the embedded perl interpreter working in 2.0 and implement most of the API.
